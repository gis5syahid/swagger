openapi: 3.0.3
info:
  title: Dokumen API Cloud Function GIS- OpenAPI 3.0
  description: >-
    Dokumentasi API Matakuliah GIS
  termsOfService: https://github.com/gis5syahid
  contact:
    email: masyahida4@gmail.com
  license:
    name: Backend Package
    url: https://pkg.go.dev/github.com/MSyahidAlFajri/backendgcp
  version: 1.0.11
externalDocs:
  description: Swagger
  url: https://gis5syahid.github.io/
servers:
  - url: https://asia-southeast2-rock-prism-401900.cloudfunctions.net
tags:
  - name: auth
    description: Authentikasi
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://github.com/MSyahidAlFajri/backendgcp
  - name: data
    description: Data Untuk akses GIS
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://github.com/MSyahidAlFajri/backendgcp
paths:
  /LoginGeo:
    post:
      tags:
        - auth
      summary: Login get Token
      description: Login and Get User Token
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auth'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '405':
          description: Invalid input
  /GetDataGeo:
    get:
      tags:
        - data
      summary: Get Data Geojson
      description: Header auth 
      operationId: GetdataGeojson
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Peta'
        '400':
          description: Invalid status value
      security:
        - token:
          - write:apiKey
          - read:apiKey
components:
  schemas:
    Auth:
      type: object
      properties:
        username:
          type: string
          example: syahid
        password:
          type: string
          example: kepo
    AuthResponse:
      type: object
      properties:
        status:
          type: bool
          example: true
        token:
          type: string
          example: anjass
        message:
          type: string
          example: Selamat Datang
    Peta:
      type: object
      properties:
        type:
          type: string
        geometry:
          type: object
          properties:
            type: 
              type: string
            coordinates: 
              type: array
        properties:
          type: object
          properties:
            name:
              type: string

  requestBodies:
    AuthReq:
      description: Request Authentication
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Auth'
    DataArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AuthResponse'
  securitySchemes:
    token:
      type: apiKey
      name: token
      in: header

      